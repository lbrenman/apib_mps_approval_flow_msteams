{
	"schemaVersion": "4",
	"info": {
		"name": "post-approver"
	},
	"parameter": {
		"properties": {
			"request": {
				"description": "The request"
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false
	},
	"start": "invoke-flow.1",
	"nodes": {
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareApproveRequest",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"console.log(data.request.body);\\n  \\n  let url = data.request.body.selfLink;\\n  \\n  let body;\\n  \\n  if(data.request.body.kind==='Subscription') {\\n    body = {\\n        \\\"approval\\\": {\\n          \\\"state\\\": data.request.body.approvalStatus,\\n          \\\"reason\\\": data.request.body.comment\\n        }\\n    };\\n  } else {\\n    body = {\\n        \\\"approval\\\": {\\n          \\\"state\\\": \\n          \\t{\\n              \\\"name\\\": data.request.body.approvalStatus,\\n\\t          \\\"reason\\\": data.request.body.comment\\n            }\\n        }\\n    };\\n  }\\n  \\n  return {url,body};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "approveRequest",
			"method": "put",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.result.body",
					"metaName": "Body",
					"metaDescription": "The content to send."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.3"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "PUT"
		},
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				},
				{
					"name": "body",
					"type": "string",
					"value": "\"\\\"success\\\"\"",
					"metaName": "Body",
					"metaDescription": "The response payload"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"javascript.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareSendToMSTeams",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let url = data.env.MS_TEAMS_WEBHOOK_URL;\\n  \\n  let summaryText;\\n  let activityTitleText;\\n  let activitySubtitleText;\\n  let requestedItemNameTitle;\\n  let requestNameTitle;\\n  \\n  if(data.request.body.kind=='Subscription') {\\n    summaryText = \\\"Marketplace Product Subscription Approval PROCESSED\\\";\\n    activityTitleText = \\\"Marketplace Product Subscription Approval PROCESSED\\\";\\n    activitySubtitleText = `The request below has been processed as ${data.request.body.approvalStatus}`;\\n    requestedItemNameTitle = \\\"Product\\\";\\n    requestNameTitle = \\\"Subscription\\\";\\n  } else {\\n    summaryText = \\\"Marketplace Asset Request Approval PROCESSED\\\";\\n    activityTitleText = \\\"Marketplace Asset Request Approval PROCESSED\\\";\\n    activitySubtitleText = `The request below has been processed as ${data.request.body.approvalStatus}`;\\n    requestedItemNameTitle = \\\"Asset\\\";\\n    requestNameTitle = \\\"Access Request\\\";\\n  }\\n\\n  let body = {\\n    \\\"@type\\\": \\\"MessageCard\\\",\\n    \\\"@context\\\": \\\"http://schema.org/extensions\\\",\\n    \\\"themeColor\\\": \\\"0076D7\\\",\\n    \\\"summary\\\": summaryText,\\n    \\\"sections\\\": [{\\n        \\\"activityTitle\\\": activityTitleText,\\n        \\\"activitySubtitle\\\": activitySubtitleText,\\n        \\\"activityImage\\\": \\\"https://i.imgur.com/Cnk4jKc.jpg\\\",\\n        \\\"markdown\\\": true,\\n        \\\"facts\\\": [{\\n            \\\"name\\\": requestedItemNameTitle,\\n            \\\"value\\\": data.request.body.requestedItemName\\n        },{\\n            \\\"name\\\": requestNameTitle,\\n            \\\"value\\\": data.request.body.requestName\\n        },{\\n            \\\"name\\\": \\\"Requestor Name\\\",\\n            \\\"value\\\": data.request.body.requestorName\\n        },{\\n            \\\"name\\\": \\\"Requestor Email\\\",\\n            \\\"value\\\": data.request.body.requestorEmail\\n        }],\\n    }]\\n  };\\n\\n  return {url,body};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.3"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "sentToMSTeams",
			"method": "post",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.result.body",
					"metaName": "Body",
					"metaDescription": "The content to send."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.result.headers",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "POST"
		},
		"rest.4": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getRequest",
			"method": "get",
			"parameters": [
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.request.body.selfLink",
					"metaName": "URL",
					"metaDescription": "The target URL."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.1"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "checkPending",
			"method": "equals",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.result"
				},
				{
					"name": "value",
					"type": "boolean",
					"value": "true"
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"javascript.2"
					],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"javascript.5"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		},
		"javascript.5": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareSendToMSTeams2",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let url = data.env.MS_TEAMS_WEBHOOK_URL;\\n  \\n  let requestNameTitle;\\n  let requestedItemNameTitle;\\n  \\n  if(data.request.body.kind=='Subscription') {\\n    requestNameTitle = \\\"SUBSCRIPTION\\\";\\n    requestedItemNameTitle = \\\"PRODUCT\\\";\\n  } else {\\n    requestNameTitle = \\\"ACCESS REQUEST\\\";\\n    requestedItemNameTitle = \\\"ASSET\\\";\\n  }\\n  \\n  let body = {\\n    text: `${requestNameTitle}: \\\"${data.request.body.requestName}\\\" for ${requestedItemNameTitle}: \\\"${data.request.body.requestedItemName}\\\" requested by ${data.request.body.requestorName} (${data.request.body.requestorEmail}) is no longer PENDING. To make any changes, please log into the Axway platform at https://platform.axway.com.`\\n  };\\n  \\n  return {url,body};\""
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.5"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.5": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "sendToMSTeams2",
			"method": "post",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.result.body",
					"metaName": "Body",
					"metaDescription": "The content to send."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "POST"
		},
		"invoke-flow.1": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow",
			"name": "getAmplifyAPIHeaders",
			"method": "invokeFlow",
			"parameters": [
				{
					"name": "id",
					"type": "string",
					"value": "\"getAmplifyAPIHeaders\"",
					"metaName": "Flow Listener ID",
					"metaDescription": "The ID of a previously configured `Flow Listener`."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"rest.4"
					],
					"context": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Next"
				},
				"error": {
					"routes": [],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Invoke Flow"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareCheckPending",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$"
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"if(data.request.body.kind==='Subscription') {\\n    return data.response.body.approval.state === \\\"pending\\\";\\n  } else {\\n    return data.response.body.approval.state.name === \\\"pending\\\";\\n  }\""
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"condition.1"
					]
				},
				"error": {
					"context": "$.error",
					"routes": []
				}
			}
		}
	}
}