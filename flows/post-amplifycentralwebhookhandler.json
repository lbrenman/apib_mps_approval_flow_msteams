{
	"schemaVersion": "4",
	"info": {
		"name": "post-amplifycentralwebhookhandler"
	},
	"parameter": {
		"properties": {
			"request": {
				"description": "The request"
			},
			"config": {
				"type": "object",
				"description": "The service's configuration"
			},
			"env": {
				"type": "object",
				"description": "The host OS environment"
			}
		},
		"additionalProperties": false
	},
	"start": "javascript.1",
	"nodes": {
		"http.1": {
			"type": "nodehandler://axway-flow/http",
			"name": "Set HTTP Success Response",
			"method": "setresponse",
			"parameters": [
				{
					"name": "status",
					"type": "number",
					"value": "200",
					"metaName": "Status",
					"metaDescription": "The HTTP status code"
				}
			],
			"outputs": {
				"next": {
					"context": "$.response",
					"routes": [],
					"metaName": "Next"
				}
			},
			"metaMethod": "Set HTTP Response"
		},
		"javascript.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "Check Payload",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let body = data.request.body,\\n      isAssetRequest = (body.type === 'SubResourceUpdated') && (body.metadata.subresource === 'approval') && (body.payload.approval.state.name === 'pending') && (body.payload.kind === 'AssetRequest'),\\n      isSubsscriptionRequest = (body.type === 'SubResourceUpdated') && (body.metadata.subresource === 'approval') && (body.payload.approval.state === 'pending') && (body.payload.kind === 'Subscription');\\n  \\n  return isAssetRequest || isSubsscriptionRequest;\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"condition.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"condition.1": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Equals",
			"method": "equals",
			"parameters": [
				{
					"name": "value",
					"type": "boolean",
					"value": "true",
					"metaName": "Value",
					"metaDescription": "The value to test input against."
				},
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.result",
					"metaName": "Source",
					"metaDescription": "The input to test."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"invoke-flow.1"
					],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"http.1"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		},
		"javascript.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareSendToMSTeams",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"// Common\\n  let url=data.env.MS_TEAMS_WEBHOOK_URL;\\n  let approverUrl=`${data.env.BASEURL}/api/approver`;\\n  let selfLink = `${data.env.API_CENTRAL_URL}/apis${data.request.body.payload.metadata.selfLink}/approval`;\\n  let requestorName=`${data.getUserResponse.body.result.firstname} ${data.getUserResponse.body.result.lastname}`;\\n  let requestorEmail=data.getUserResponse.body.result.email;\\n  let requestorEmailUrl=`mailTo:${data.getUserResponse.body.result.email}`;\\n  let orgName = data.getOrgResponse.body.result.name;\\n  let orgUrl = 'https://platform.axway.com/org/'+data.request.body.organization.id;\\n  \\n  let body;\\n  \\n  // Product Subscription vars\\n  let productName;\\n  let productUrl;\\n  \\n  // Asset vars\\n  let assetName;\\n  let assetUrl;\\n  let accessRequestName;\\n  let accessRequestUrl;\\n  \\n  // Both\\n  let subscriptionName;\\n  let subscriptionUrl;\\n  let teamName;\\n  let teamUrl;\\n  \\n  if(data.request.body.payload.kind=='Subscription') {\\n\\n    productName=data.getProductResponse.body.title;\\n    productUrl=`${data.env.API_CENTRAL_URL}/products/details/${data.request.body.payload.spec.product}`;\\n    subscriptionName=data.request.body.payload.title;\\n    subscriptionUrl=`${data.env.API_CENTRAL_URL}/marketplace/subscriptions`;\\n    teamName = data.getTeamResponse.body.result.name;\\n    teamUrl = 'https://platform.axway.com/org/team/'+data.request.body.payload.marketplace.resource.owner.id;\\n    \\n    body = {\\n      \\\"@type\\\": \\\"MessageCard\\\",\\n      \\\"@context\\\": \\\"http://schema.org/extensions\\\",\\n      \\\"themeColor\\\": \\\"0076D7\\\",\\n      \\\"summary\\\": \\\"Marketplace Product Subscription Approval REQUESTED\\\",\\n      \\\"sections\\\": [{\\n        \\\"activityTitle\\\": \\\"Marketplace Product Subscription Approval REQUESTED\\\",\\n        \\\"activitySubtitle\\\": \\\"Please review and approve or reject the request\\\",\\n        \\\"markdown\\\": true,\\n        \\\"facts\\\": [{\\n          \\\"name\\\": \\\"Product\\\",\\n          \\\"value\\\": `[${productName}](${productUrl})`\\n        },{\\n          \\\"name\\\": \\\"Subscription\\\",\\n          \\\"value\\\": `[${subscriptionName}](${subscriptionUrl})`\\n        },{\\n          \\\"name\\\": \\\"Requestor\\\",\\n          \\\"value\\\": `[${requestorName} (${requestorEmail})](${requestorEmailUrl})`\\n        },{\\n          \\\"name\\\": \\\"Organization\\\",\\n          \\\"value\\\": `[${orgName}](${orgUrl})`\\n        },{\\n          \\\"name\\\": \\\"Team\\\",\\n          \\\"value\\\": `[${teamName}](${teamUrl})`\\n        }],\\n      }],\\n      \\\"potentialAction\\\": [{\\n        \\\"@type\\\": \\\"ActionCard\\\",\\n        \\\"name\\\": \\\"Comment\\\",\\n        \\\"inputs\\\": [{\\n          \\\"@type\\\": \\\"TextInput\\\",\\n          \\\"id\\\": \\\"comment\\\",\\n          \\\"isMultiline\\\": false,\\n          \\\"title\\\": \\\"Please enter any comments\\\"\\n        }],\\n        \\\"actions\\\": [{\\n          \\\"@type\\\": \\\"HttpPOST\\\",\\n          \\\"name\\\": \\\"Approve\\\",\\n          \\\"target\\\": approverUrl,\\n          \\\"body\\\": \\\"{\\\\\\\"comment\\\\\\\":\\\\\\\"{{comment.value}}\\\\\\\",\\\\\\\"approvalStatus\\\\\\\":\\\\\\\"approved\\\\\\\", \\\\\\\"selfLink\\\\\\\":\\\\\\\"\\\"+selfLink+\\\"\\\\\\\",\\\\\\\"subscriptionName\\\\\\\":\\\\\\\"\\\"+subscriptionName+\\\"\\\\\\\",\\\\\\\"productName\\\\\\\":\\\\\\\"\\\"+productName+\\\"\\\\\\\",\\\\\\\"requestorName\\\\\\\":\\\\\\\"\\\"+requestorName+\\\"\\\\\\\",\\\\\\\"requestorEmail\\\\\\\":\\\\\\\"\\\"+requestorEmail+\\\"\\\\\\\"}\\\",\\n          \\\"headers\\\": [{\\n            \\\"name\\\": \\\"apiKey\\\",\\n            \\\"value\\\": data.env.API_KEY\\n          }]\\n        },{\\n          \\\"@type\\\": \\\"HttpPOST\\\",\\n          \\\"name\\\": \\\"Reject\\\",\\n          \\\"target\\\": approverUrl,\\n          \\\"body\\\": \\\"{\\\\\\\"comment\\\\\\\":\\\\\\\"{{comment.value}}\\\\\\\",\\\\\\\"approvalStatus\\\\\\\":\\\\\\\"rejected\\\\\\\", \\\\\\\"selfLink\\\\\\\":\\\\\\\"\\\"+selfLink+\\\"\\\\\\\",\\\\\\\"subscriptionName\\\\\\\":\\\\\\\"\\\"+subscriptionName+\\\"\\\\\\\",\\\\\\\"productName\\\\\\\":\\\\\\\"\\\"+productName+\\\"\\\\\\\",\\\\\\\"requestorName\\\\\\\":\\\\\\\"\\\"+requestorName+\\\"\\\\\\\",\\\\\\\"requestorEmail\\\\\\\":\\\\\\\"\\\"+requestorEmail+\\\"\\\\\\\"}\\\",\\n          \\\"headers\\\": [{\\n            \\\"name\\\": \\\"apiKey\\\",\\n            \\\"value\\\": data.env.API_KEY\\n          }]\\n        }]\\n      }]\\n    };\\n    \\n  } else {\\n    \\n    //productName=data.getAssetResourceResponse.body.title;\\n    //productUrl=`${data.env.API_CENTRAL_URL}/marketplace/access-requests`;\\n    //productName=data.getProductResponse.body.title;\\n    //productUrl=`${data.env.API_CENTRAL_URL}/products/details/${data.request.body.payload.spec.product}`;\\n    assetName=data.getAPIServiceRevisionResponse.body.metadata.references.find(c => c.kind==='APIService').name;\\n    //assetUrl=`${data.env.API_CENTRAL_URL}/assets/details/${assetName}/${data.request.body.payload.metadata.references.find(c => c.kind==='Asset').name}`;\\n    assetUrl=`${data.env.API_CENTRAL_URL}/topology/environments/details/${data.getAPIServiceRevisionResponse.body.metadata.references.find(c => c.kind==='APIService').scopeName}/svc/${data.getAPIServiceRevisionResponse.body.metadata.references.find(c => c.kind==='APIService').name}`;\\n    accessRequestName=data.request.body.payload.name;\\n    accessRequestUrl=`${data.env.API_CENTRAL_URL}/marketplace/access-requests`;\\n    subscriptionName=data.getSubscriptionResponse.body.title;\\n    subscriptionUrl=`${data.env.API_CENTRAL_URL}/marketplace/subscriptions`;\\n    teamName = data.getTeamResponse.body.result.name;\\n    teamUrl = `https://platform.axway.com/org/team/${data.getTeamResponse.body.result.guid}`;\\n    \\n    body = {\\n      \\\"@type\\\": \\\"MessageCard\\\",\\n      \\\"@context\\\": \\\"http://schema.org/extensions\\\",\\n      \\\"themeColor\\\": \\\"0076D7\\\",\\n      \\\"summary\\\": \\\"Marketplace Access Approval REQUESTED\\\",\\n      \\\"sections\\\": [{\\n        \\\"activityTitle\\\": \\\"Marketplace Access Approval REQUESTED\\\",\\n        \\\"activitySubtitle\\\": \\\"Please review and approve or reject the request\\\",\\n        \\\"markdown\\\": true,\\n        \\\"facts\\\": [{\\n          \\\"name\\\": \\\"Asset Resource\\\",\\n          \\\"value\\\": data.request.body.payload.metadata.references.find(c => c.kind==='AssetResource').name\\n        },{\\n          \\\"name\\\": \\\"Access Request\\\",\\n          \\\"value\\\": `[${accessRequestName}](${accessRequestUrl})`\\n        },{\\n          \\\"name\\\": \\\"Asset\\\",\\n          \\\"value\\\": `[${assetName}](${assetUrl})`\\n        },{\\n          \\\"name\\\": \\\"Access Type\\\",\\n          \\\"value\\\": data.request.body.payload.metadata.references.find(c => c.kind==='AssetRequestDefinition').name\\n        },{\\n          \\\"name\\\": \\\"Subscription\\\",\\n          \\\"value\\\": `[${subscriptionName}](${subscriptionUrl})`\\n        },{\\n          \\\"name\\\": \\\"Application\\\",\\n          \\\"value\\\": data.getApplicationResponse.body.title\\n        },{\\n          \\\"name\\\": \\\"Requestor\\\",\\n          \\\"value\\\": `[${requestorName} (${requestorEmail})](${requestorEmailUrl})`\\n        },{\\n          \\\"name\\\": \\\"Organization\\\",\\n          \\\"value\\\": `[${orgName}](${orgUrl})`\\n        },{\\n          \\\"name\\\": \\\"Team\\\",\\n          \\\"value\\\": `[${teamName}](${teamUrl})`\\n        }],\\n      }],\\n      \\\"potentialAction\\\": [{\\n        \\\"@type\\\": \\\"ActionCard\\\",\\n        \\\"name\\\": \\\"Comment\\\",\\n        \\\"inputs\\\": [{\\n          \\\"@type\\\": \\\"TextInput\\\",\\n          \\\"id\\\": \\\"comment\\\",\\n          \\\"isMultiline\\\": false,\\n          \\\"title\\\": \\\"Please enter any comments\\\"\\n        }],\\n        \\\"actions\\\": [{\\n          \\\"@type\\\": \\\"HttpPOST\\\",\\n          \\\"name\\\": \\\"Approve\\\",\\n          \\\"target\\\": approverUrl,\\n          \\\"body\\\": \\\"{\\\\\\\"comment\\\\\\\":\\\\\\\"{{comment.value}}\\\\\\\",\\\\\\\"approvalStatus\\\\\\\":\\\\\\\"approved\\\\\\\", \\\\\\\"selfLink\\\\\\\":\\\\\\\"\\\"+selfLink+\\\"\\\\\\\",\\\\\\\"subscriptionName\\\\\\\":\\\\\\\"\\\"+subscriptionName+\\\"\\\\\\\",\\\\\\\"productName\\\\\\\":\\\\\\\"\\\"+productName+\\\"\\\\\\\",\\\\\\\"requestorName\\\\\\\":\\\\\\\"\\\"+requestorName+\\\"\\\\\\\",\\\\\\\"requestorEmail\\\\\\\":\\\\\\\"\\\"+requestorEmail+\\\"\\\\\\\"}\\\",\\n          \\\"headers\\\": [{\\n            \\\"name\\\": \\\"apiKey\\\",\\n            \\\"value\\\": data.env.API_KEY\\n          }]\\n        },{\\n          \\\"@type\\\": \\\"HttpPOST\\\",\\n          \\\"name\\\": \\\"Reject\\\",\\n          \\\"target\\\": approverUrl,\\n          \\\"body\\\": \\\"{\\\\\\\"comment\\\\\\\":\\\\\\\"{{comment.value}}\\\\\\\",\\\\\\\"approvalStatus\\\\\\\":\\\\\\\"rejected\\\\\\\", \\\\\\\"selfLink\\\\\\\":\\\\\\\"\\\"+selfLink+\\\"\\\\\\\",\\\\\\\"subscriptionName\\\\\\\":\\\\\\\"\\\"+subscriptionName+\\\"\\\\\\\",\\\\\\\"productName\\\\\\\":\\\\\\\"\\\"+productName+\\\"\\\\\\\",\\\\\\\"requestorName\\\\\\\":\\\\\\\"\\\"+requestorName+\\\"\\\\\\\",\\\\\\\"requestorEmail\\\\\\\":\\\\\\\"\\\"+requestorEmail+\\\"\\\\\\\"}\\\",\\n          \\\"headers\\\": [{\\n            \\\"name\\\": \\\"apiKey\\\",\\n            \\\"value\\\": data.env.API_KEY\\n          }]\\n        }]\\n      }]\\n    };\\n    \\n  }\\n  \\n  return {url,body};\""
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.1"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.1": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "sendToMSTeams",
			"method": "post",
			"parameters": [
				{
					"name": "body",
					"type": "jsonpath",
					"value": "$.result.body",
					"metaName": "Body",
					"metaDescription": "The content to send."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "POST"
		},
		"javascript.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetUser",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let userId = data.request.body.payload.metadata.audit.createUserId;\\n  let url = 'https://platform.axway.com/api/v1/user/'+userId;\\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.2"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.2": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getUser",
			"method": "get",
			"parameters": [
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.4"
					],
					"context": "$.getUserResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"invoke-flow.1": {
			"type": "nodehandler://@axway/api-builder-plugin-invoke-flow/invoke-flow",
			"name": "getAmplifyAPIHeaders",
			"method": "invokeFlow",
			"parameters": [
				{
					"name": "id",
					"type": "string",
					"value": "\"getAmplifyAPIHeaders\"",
					"metaName": "Flow Listener ID",
					"metaDescription": "The ID of a previously configured `Flow Listener`."
				}
			],
			"outputs": {
				"next": {
					"routes": [
						"javascript.3"
					],
					"context": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Next"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "Invoke Flow"
		},
		"javascript.4": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetOrg",
			"method": "Execute",
			"parameters": [
				{
					"name": "code",
					"type": "string",
					"value": "\"let orgId = data.request.body.organization.id;\\n  let url = 'https://platform.axway.com/api/v1/org/'+orgId;\\n  \\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				},
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.3"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.3": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getOrg",
			"method": "get",
			"parameters": [
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"condition.2"
					],
					"context": "$.getOrgResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"javascript.5": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetTeam",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let teamIdl\\n  if(data.request.body.payload.kind === 'Subscription') {\\n    teamId = data.request.body.payload.marketplace.resource.owner.id;\\n  }\\n  \\n  let url = 'https://platform.axway.com/api/v1/team/'+teamId;\\n  \\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.4"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.4": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getTeam",
			"method": "get",
			"parameters": [
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.2"
					],
					"context": "$.getTeamResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"javascript.6": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetProduct",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let productName = data.request.body.payload.spec.product;\\n  let url = `${data.env.API_CENTRAL_URL}/apis/catalog/v1/products/${productName}`;\\n  \\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.5"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.5": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getProduct",
			"method": "get",
			"parameters": [
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.5"
					],
					"context": "$.getProductResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"condition.2": {
			"type": "nodehandler://axway-flow/condition",
			"name": "Equals",
			"method": "equals",
			"parameters": [
				{
					"name": "source",
					"type": "jsonpath",
					"value": "$.request.body.payload.kind",
					"metaName": "Source",
					"metaDescription": "The input to test."
				},
				{
					"name": "value",
					"type": "string",
					"value": "\"Subscription\"",
					"metaName": "Value",
					"metaDescription": "The value to test input against."
				}
			],
			"outputs": {
				"true": {
					"routes": [
						"javascript.6"
					],
					"context": "$.equals",
					"metaName": "True"
				},
				"false": {
					"routes": [
						"javascript.7"
					],
					"context": "$.equals",
					"metaName": "False"
				}
			},
			"metaMethod": "Equals"
		},
		"javascript.8": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetTeam",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let teamId = data.getSubscriptionResponse.body.marketplace.resource.owner.id;\\n  \\n  let url = `https://platform.axway.com/api/v1/team/${teamId}`;\\n  \\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.7"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.7": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getTeam",
			"method": "get",
			"parameters": [
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.9"
					],
					"context": "$.getTeamResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"javascript.7": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetSubscription",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let subsName = data.request.body.payload.metadata.references.find(c => c.kind==='Subscription').name;\\n  let url = `${data.env.API_CENTRAL_URL}/apis/catalog/v1alpha1/subscriptions/${subsName}`;\\n  \\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.6"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.6": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getSubscription",
			"method": "get",
			"parameters": [
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.8"
					],
					"context": "$.getSubscriptionResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"javascript.9": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetAssetResource",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let selfLink = data.request.body.payload.metadata.references.find(c => c.kind==='AssetResource').selfLink;\\n  //let url = `${data.env.API_CENTRAL_URL}/apis${selfLink}?fields=title`;\\n  let url = `${data.env.API_CENTRAL_URL}/apis${selfLink}`;\\n  \\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.8"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.8": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getAssetResource",
			"method": "get",
			"parameters": [
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.11"
					],
					"context": "$.getAssetResourceResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"javascript.10": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetApplication",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let appId = data.request.body.payload.metadata.scope.name;\\n  let url = `${data.env.API_CENTRAL_URL}/apis/catalog/v1alpha1/applications/${appId}?fields=title`;\\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.9"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [
						"http.1"
					],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.9": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getApplication",
			"method": "get",
			"parameters": [
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				},
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.2"
					],
					"context": "$.getApplicationResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		},
		"javascript.11": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-javascript/javascript",
			"name": "prepareGetAPIServiceRevision",
			"method": "Execute",
			"parameters": [
				{
					"name": "data",
					"type": "jsonpath",
					"value": "$",
					"metaName": "Data",
					"metaDescription": "The value to apply as the `data` argument of the JavaScript code. For objects and arrays, `data` is passed by reference."
				},
				{
					"name": "code",
					"type": "string",
					"value": "\"let selfLink = data.getAssetResourceResponse.body.metadata.references.find(c => c.kind==='APIServiceRevision').selfLink;\\n  let url = `${data.env.API_CENTRAL_URL}/apis${selfLink}`;\\n  \\n  return {url};\"",
					"metaName": "Code",
					"metaDescription": "A JavaScript function body. Supports `await` and returning promises. `data` is the value of the Data parameter. `logger` is the API Builder logger. See the docs for more info: https://docs.axway.com/bundle/api-builder/page/docs/developer_guide/flows/flow_nodes/javascript_flow_node/index.html"
				}
			],
			"outputs": {
				"next": {
					"context": "$.result",
					"routes": [
						"rest.10"
					],
					"metaName": "Next"
				},
				"error": {
					"context": "$.error",
					"routes": [],
					"metaName": "Error"
				}
			},
			"metaMethod": "Execute"
		},
		"rest.10": {
			"type": "nodehandler://@axway/api-builder-plugin-fn-restclient/rest",
			"name": "getAPIServiceRevision",
			"method": "get",
			"parameters": [
				{
					"name": "url",
					"type": "jsonpath",
					"value": "$.result.url",
					"metaName": "URL",
					"metaDescription": "The target URL."
				},
				{
					"name": "headers",
					"type": "jsonpath",
					"value": "$.getAmplifyAPIHeadersFlowResponse",
					"metaName": "Headers",
					"metaDescription": "The HTTP headers to set."
				}
			],
			"outputs": {
				"2xx": {
					"routes": [
						"javascript.10"
					],
					"context": "$.getAPIServiceRevisionResponse",
					"metaName": "2XX"
				},
				"3xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "3XX"
				},
				"4xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "4XX"
				},
				"5xx": {
					"routes": [
						"http.1"
					],
					"context": "$.response",
					"metaName": "5XX"
				},
				"error": {
					"routes": [
						"http.1"
					],
					"context": "$.error",
					"metaName": "Error"
				}
			},
			"metaMethod": "GET"
		}
	}
}